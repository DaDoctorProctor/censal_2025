Index: src/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport re\r\nimport math\r\nimport pandas as pd\r\nfrom openpyxl import load_workbook\r\nfrom openpyxl.styles import Alignment, Font, Border, Side\r\nfrom openpyxl.utils import get_column_letter\r\n\r\n# -----------------------\r\n# Config\r\n# -----------------------\r\nINPUT_CSV = \"input/SAIC_Exporta_2025919_1928329.csv\"\r\nOUTPUT_DIR = \"output\"\r\nYEARS = [2008, 2013, 2018, 2023]\r\nNUMERIC_COL_WIDTH = 14  # Fixed width for numeric columns\r\nFIRST_COL_WIDTH = 50    # Width for 'Actividad económica'\r\n\r\n# ---------- Helpers ----------\r\ndef center_numeric_columns_and_bold_total(filename, sheet_name):\r\n    wb = load_workbook(filename)\r\n    ws = wb[sheet_name]\r\n    max_row = ws.max_row\r\n    max_col = ws.max_column\r\n\r\n    # Center numeric columns B onward, from row 2\r\n    for row in ws.iter_rows(min_row=2, max_row=max_row, min_col=2, max_col=max_col):\r\n        for cell in row:\r\n            cell.alignment = Alignment(horizontal=\"center\", vertical=\"center\")\r\n\r\n    # Bold last row (Total)\r\n    for cell in ws[max_row]:\r\n        cell.font = Font(bold=True)\r\n\r\n    wb.save(filename)\r\n\r\ndef sanitize_filename(name):\r\n    s = re.sub(r'[^\\w\\s-]', '', name)\r\n    s = re.sub(r'\\s+', '_', s.strip())\r\n    return s\r\n\r\ndef clean_actividad_economica(df, col=\"Actividad económica\"):\r\n    df[col] = df[col].apply(lambda x: re.sub(r'Sector\\s*\\d+(-\\d+)?\\s*', '', str(x)))\r\n    return df\r\n\r\ndef add_total_row(df, first_col=\"Actividad económica\"):\r\n    numeric_cols = df.select_dtypes(include=\"number\").columns\r\n    if len(numeric_cols) == 0:\r\n        return df\r\n    total = df[numeric_cols].sum()\r\n    total[first_col] = \"Total\"\r\n    return pd.concat([df, pd.DataFrame([total])], ignore_index=True)\r\n\r\ndef format_numbers_with_two_decimals_and_commas(filename):\r\n    wb = load_workbook(filename)\r\n    for ws in wb.worksheets:\r\n        for row in ws.iter_rows(min_row=3, max_row=ws.max_row, min_col=2, max_col=ws.max_column):\r\n            for cell in row:\r\n                cell.number_format = '#,##0.00'\r\n    wb.save(filename)\r\n\r\ndef wrap_text_first_column(filename, sheet_name):\r\n    wb = load_workbook(filename)\r\n    ws = wb[sheet_name]\r\n    for row in ws.iter_rows(min_row=1, max_row=ws.max_row, min_col=1, max_col=1):\r\n        for cell in row:\r\n            cell.alignment = Alignment(wrap_text=True, vertical=\"top\")\r\n    wb.save(filename)\r\n\r\ndef set_column_widths(filename, sheet_name, first_col_width=50, numeric_col_width=20):\r\n    wb = load_workbook(filename)\r\n    ws = wb[sheet_name]\r\n    ws.column_dimensions[get_column_letter(1)].width = first_col_width\r\n    for col in range(2, ws.max_column + 1):\r\n        ws.column_dimensions[get_column_letter(col)].width = numeric_col_width\r\n    wb.save(filename)\r\n\r\ndef adjust_first_column_and_autofit_rows(filename, sheet_name, line_height=15):\r\n    \"\"\"Adjust row heights based on wrapped text in first column.\"\"\"\r\n    wb = load_workbook(filename)\r\n    ws = wb[sheet_name]\r\n    for row in ws.iter_rows(min_row=1, max_row=ws.max_row):\r\n        max_lines = 1\r\n        for cell in row:\r\n            if cell.value:\r\n                col_letter = get_column_letter(cell.column)\r\n                col_width = ws.column_dimensions[col_letter].width or 10\r\n                lines = math.ceil(len(str(cell.value)) / max(col_width, 1))\r\n                max_lines = max(max_lines, lines)\r\n        ws.row_dimensions[row[0].row].height = max_lines * line_height\r\n    wb.save(filename)\r\n\r\ndef add_two_row_header(filename, sheet_name, var_names, years):\r\n    wb = load_workbook(filename)\r\n    ws = wb[sheet_name]\r\n    thin_border = Border(left=Side(style='thin'), right=Side(style='thin'),\r\n                         top=Side(style='thin'), bottom=Side(style='thin'))\r\n\r\n    ws.insert_rows(1)\r\n    col_start = 2\r\n    for var in var_names:\r\n        ws.merge_cells(start_row=1, start_column=col_start, end_row=1, end_column=col_start + len(years) - 1)\r\n        cell = ws.cell(row=1, column=col_start, value=var)\r\n        cell.font = Font(bold=True)\r\n        cell.alignment = Alignment(horizontal=\"center\", vertical=\"center\")\r\n        cell.border = thin_border\r\n        for i, year in enumerate(years):\r\n            y_cell = ws.cell(row=2, column=col_start + i, value=year)\r\n            y_cell.font = Font(bold=True)\r\n            y_cell.alignment = Alignment(horizontal=\"center\", vertical=\"center\")\r\n            y_cell.border = thin_border\r\n        col_start += len(years)\r\n\r\n    ws.cell(row=2, column=1, value=\"Actividad económica\")\r\n    ws.cell(row=2, column=1).font = Font(bold=True)\r\n    ws.cell(row=2, column=1).alignment = Alignment(horizontal=\"center\", vertical=\"center\")\r\n    ws.cell(row=2, column=1).border = thin_border\r\n\r\n    # Apply borders to all cells\r\n    for row in ws.iter_rows(min_row=2, max_row=ws.max_row, min_col=1, max_col=ws.max_column):\r\n        for cell in row:\r\n            cell.border = thin_border\r\n\r\n    wb.save(filename)\r\n\r\n# ---------- Main ----------\r\ndef main():\r\n    os.makedirs(OUTPUT_DIR, exist_ok=True)\r\n    df = pd.read_csv(INPUT_CSV)\r\n    df.columns = [c.strip() for c in df.columns]\r\n\r\n    var_cols = df.columns[3:]\r\n\r\n    for ent in df[\"Entidad\"].unique():\r\n        df_ent = df[df[\"Entidad\"] == ent].copy()\r\n        df_ent = clean_actividad_economica(df_ent, col=\"Actividad económica\")\r\n        output_file = os.path.join(OUTPUT_DIR, sanitize_filename(ent) + \".xlsx\")\r\n\r\n        # ---------- Create Main Table ----------\r\n        main_table = pd.DataFrame({\"Actividad económica\": df_ent[\"Actividad económica\"].unique()})\r\n        main_table.set_index(\"Actividad económica\", inplace=True)\r\n\r\n        for var in var_cols:\r\n            for year in YEARS:\r\n                val = df_ent[df_ent[\"Año Censal\"] == year][[\"Actividad económica\", var]].set_index(\"Actividad económica\")\r\n                val = val.reindex(main_table.index).fillna(0)\r\n                col_name = f\"{var}_{year}\"\r\n                main_table[col_name] = val[var]\r\n\r\n        main_table.reset_index(inplace=True)\r\n        main_table = add_total_row(main_table, first_col=\"Actividad económica\")\r\n\r\n        with pd.ExcelWriter(output_file, engine=\"openpyxl\") as writer:\r\n            # Main table\r\n            main_table.to_excel(writer, sheet_name=\"Main Table\", index=False)\r\n\r\n            # Individual variable tabs\r\n            for var in var_cols:\r\n                var_table = pd.DataFrame({\"Actividad económica\": df_ent[\"Actividad económica\"].unique()})\r\n                var_table.set_index(\"Actividad económica\", inplace=True)\r\n                for year in YEARS:\r\n                    val = df_ent[df_ent[\"Año Censal\"] == year][[\"Actividad económica\", var]].set_index(\"Actividad económica\")\r\n                    val = val.reindex(var_table.index).fillna(0)\r\n                    var_table[year] = val[var]\r\n                var_table.reset_index(inplace=True)\r\n                var_table = add_total_row(var_table, first_col=\"Actividad económica\")\r\n                code = var.split()[0]\r\n                var_table.to_excel(writer, sheet_name=code, index=False)\r\n\r\n        # ---------- Formatting ----------\r\n        # Main Table\r\n        add_two_row_header(output_file, \"Main Table\", var_cols, YEARS)\r\n        wrap_text_first_column(output_file, \"Main Table\")\r\n        set_column_widths(output_file, \"Main Table\", first_col_width=FIRST_COL_WIDTH, numeric_col_width=NUMERIC_COL_WIDTH)\r\n        adjust_first_column_and_autofit_rows(output_file, \"Main Table\")\r\n\r\n        # Individual variable tabs\r\n        for var in var_cols:\r\n            code = var.split()[0]\r\n            add_two_row_header(output_file, code, [var], YEARS)\r\n            wrap_text_first_column(output_file, code)\r\n            set_column_widths(output_file, code, first_col_width=FIRST_COL_WIDTH, numeric_col_width=NUMERIC_COL_WIDTH)\r\n            adjust_first_column_and_autofit_rows(output_file, code)\r\n\r\n        # Number formatting\r\n        format_numbers_with_two_decimals_and_commas(output_file)\r\n\r\n        # ---------- Center numeric columns and bold Total ----------\r\n        wb = load_workbook(output_file)\r\n        for sheet_name in wb.sheetnames:\r\n            ws = wb[sheet_name]\r\n            max_row = ws.max_row\r\n            max_col = ws.max_column\r\n\r\n            # Center numeric columns B onward from row 2\r\n            for row in ws.iter_rows(min_row=2, max_row=max_row, min_col=2, max_col=max_col):\r\n                for cell in row:\r\n                    cell.alignment = Alignment(horizontal=\"center\", vertical=\"center\")\r\n\r\n            # Bold last row (Total)\r\n            for cell in ws[max_row]:\r\n                cell.font = Font(bold=True)\r\n\r\n        wb.save(output_file)\r\n\r\n        print(f\"Saved Excel for Entidad: {ent} -> {output_file}\")\r\n\r\n    print(\"✅ Finished all Entidades with fixed widths, borders, two decimals, centered numeric columns, and bold Total row.\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main.py b/src/main.py
--- a/src/main.py	(revision 8f99439b25d3d426f4eb9f9df461ea8dbc34a930)
+++ b/src/main.py	(date 1758525153386)
@@ -6,32 +6,6 @@
 from openpyxl.styles import Alignment, Font, Border, Side
 from openpyxl.utils import get_column_letter
 
-# -----------------------
-# Config
-# -----------------------
-INPUT_CSV = "input/SAIC_Exporta_2025919_1928329.csv"
-OUTPUT_DIR = "output"
-YEARS = [2008, 2013, 2018, 2023]
-NUMERIC_COL_WIDTH = 14  # Fixed width for numeric columns
-FIRST_COL_WIDTH = 50    # Width for 'Actividad económica'
-
-# ---------- Helpers ----------
-def center_numeric_columns_and_bold_total(filename, sheet_name):
-    wb = load_workbook(filename)
-    ws = wb[sheet_name]
-    max_row = ws.max_row
-    max_col = ws.max_column
-
-    # Center numeric columns B onward, from row 2
-    for row in ws.iter_rows(min_row=2, max_row=max_row, min_col=2, max_col=max_col):
-        for cell in row:
-            cell.alignment = Alignment(horizontal="center", vertical="center")
-
-    # Bold last row (Total)
-    for cell in ws[max_row]:
-        cell.font = Font(bold=True)
-
-    wb.save(filename)
 
 def sanitize_filename(name):
     s = re.sub(r'[^\w\s-]', '', name)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0ba21d05-6455-452c-a1a7-f88e94fe8149\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/censal_2025.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/input/SAIC_Exporta_2025919_1928329.csv\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/output/00_Total_Nacional.xlsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/output/28_Tamaulipas.xlsx\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"332oa2zEbGAwPiGCEDVH3Thatoy\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"junie.onboarding.icon.badge.shown\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Peni-/the_last_academy_of_economy/censal_2025\",\r\n    \"to.speed.mode.migration.done\": \"true\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Peni-\\the_last_academy_of_economy\\censal_2025\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-b598e85cdad2-JavaScript-PY-252.25557.178\" />\r\n        <option value=\"bundled-python-sdk-ce6832f46686-7b97d883f26b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.25557.178\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0ba21d05-6455-452c-a1a7-f88e94fe8149\" name=\"Changes\" comment=\"\" />\r\n      <created>1758524588151</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1758524588151</updated>\r\n      <workItem from=\"1758524685983\" duration=\"65000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8f99439b25d3d426f4eb9f9df461ea8dbc34a930)
+++ b/.idea/workspace.xml	(date 1758525200859)
@@ -1,17 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="0ba21d05-6455-452c-a1a7-f88e94fe8149" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/censal_2025.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/input/SAIC_Exporta_2025919_1928329.csv" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/output/00_Total_Nacional.xlsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/output/28_Tamaulipas.xlsx" afterDir="false" />
+    <list default="true" id="0ba21d05-6455-452c-a1a7-f88e94fe8149" name="Changes" comment="Initial commit, includes legacy files from first version.">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -19,8 +14,26 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN",
+    "assignee": "DaDoctorProctor"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/DaDoctorProctor/censal_2025.git",
+    "accountId": "7d76d206-51e9-4195-b295-3b279b677cdb"
+  }
+}]]></component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 0
 }</component>
@@ -33,9 +46,14 @@
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "dev",
     "junie.onboarding.icon.badge.shown": "true",
     "last_opened_file_path": "C:/Users/Peni-/the_last_academy_of_economy/censal_2025",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
     "to.speed.mode.migration.done": "true",
     "vue.rearranger.settings.migration": "true"
   }
@@ -60,11 +78,24 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1758524588151</updated>
-      <workItem from="1758524685983" duration="65000" />
+      <workItem from="1758524685983" duration="512000" />
     </task>
+    <task id="LOCAL-00001" summary="Initial commit, includes legacy files from first version.">
+      <option name="closed" value="true" />
+      <created>1758524929902</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1758524929902</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Initial commit, includes legacy files from first version." />
+    <option name="LAST_COMMIT_MESSAGE" value="Initial commit, includes legacy files from first version." />
+  </component>
 </project>
\ No newline at end of file
